/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "keymap_italian.h"

// Layer definitions
    #define BASE 0
    #define SYM 1
    #define EXT 2
    #define FNC 3
    #define SYM2 4
    #define ACCENT 5
	#define SETTINGS 6
// -----------------

&sk {
		// don't release mods on other mods presses
    ignore-modifiers;
};

/ {
    keymap {
				compatible = "zmk,keymap";

        // Base alpha layer
				default_layer {
						label = "Default";
						bindings = <
						&kp Q &kp W &kp E &kp R &kp T           &kp Y &kp U  &kp I     &kp O   &kp P
						&mt LC(LS(LA(LGUI))) A  &mt LEFT_CONTROL S  &mt LEFT_ALT D  &mt LEFT_GUI F &kp G           &kp H  &mt LEFT_GUI J &mt LEFT_ALT K &mt LEFT_CONTROL L 	&mt LC(LS(LA(LGUI))) SEMICOLON
						&kp Z &kp X &kp C &kp V &kp B           &kp N &kp M  &kp COMMA &kp DOT &kp SLASH
										&mt LC(LS(LALT)) SPACE &kp LSHIFT           &mo EXT &mo SYM
						>;
				};

        // Numbers and high frequency symbols
				sym_layer {
						label = "Symbols";
						bindings = <
						&kp N1 &kp N2 &kp N3 &kp N4 &kp N5		                                    &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
						&kp C_VOLUME_UP &kp KP_MINUS &kp UP &kp KP_PLUS &kp KP_EQUAL  &kp ENTER &kp LEFT_GUI &kp LEFT_ALT &kp TAB &kp BACKSPACE
						&kp C_VOLUME_DOWN &kp LEFT &kp DOWN &kp RIGHT &kp ASTRK 	&kp ESCAPE &kp C_PREVIOUS &kp C_PLAY_PAUSE &kp C_NEXT &none
                                        &trans  &trans       &trans &trans
						>;
				};

        // Main modifiers and arrow keys
		    ext_layer {
						label = "Extend";
						bindings = <
						&kp EXCLAMATION &kp AT &kp HASH  &kp DOLLAR  &kp PERCENT    			        &kp EXCL  &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp CARET &kp TILDE
						&kp ESCAPE &kp GRAVE  &kp APOSTROPHE  &kp DOUBLE_QUOTES  &kp PLUS 			&kp MINUS &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND   &kp PIPE
						&kp TAB  &kp LEFT_GUI &kp ASTERISK &kp KP_EQUAL   &kp MINUS          &kp UNDERSCORE &kp LEFT_BRACE &kp RIGHT_BRACE &kp BACKSLASH  &none
																					&trans &mo SETTINGS    &trans  &trans
						>;
				};

        // Function keys with modifiers
				fnc_layer {
						label = "Function";
						bindings = <
						&kp F1 &kp F2 &kp F3 &kp F4 &kp F5                  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10
						&sk LALT &sk LGUI &sk LSHIFT &sk LCTRL &kp RALT     &kp F11 &kp F12  &kp PRINTSCREEN &trans &trans
						&none &none &none &none &none				          &none &none &none &none &none
																		&none &none              &none &none
						>;
				};

        // Low frequency symbols.
				symbols_2_layer {
						label = "Symbols2";
						bindings = <
						&kp IT_CARET &kp IT_UNDER &kp IT_PND &kp IT_EUR &kp IT_HASH         &none &none &none &none &none
						&kp IT_BKTK &kp IT_TILDE &kp IT_BSLH &kp IT_PIPE &kp IT_AND         &none &none &none &none &none
						&none 			&none 			 &kp IT_SECT &kp IT_CCED &kp IT_DEG				  &none &none &none &none &none
																														&none &none        	&none &none
						>;
				};

        // Used to type regional accents.
				accent_layer {
						label = "Accents";
						bindings = <
						&none &none &none &kp IT_CEGR &none                         &none &none &none &none &none
						&kp IT_AGRV &kp IT_IGRV &kp IT_OGRV &kp IT_EGRV &kp IT_EACU &none &none &none &none &none
						&none &none &none &kp IT_UGRV &none                         &none &none &none &none &none
															&none &none                         &none &none
						>;
				};

        // Used to change the keyboard's settings.
				settings_layer {
						label = "Settings";
						bindings = <
						&bootloader &none &none &bt BT_CLR &bt BT_SEL 0               &bt BT_SEL 3 &none &none &none &bootloader
						&none &none &none &none      &bt BT_SEL 1 						  &bt BT_SEL 4 &none &none &none &none
						&none &none &none &none      &bt BT_SEL 2               &bt BT_SEL 5 &none &none &none &none
															&none &none                         &none &none
						>;
				};
		};
};
